(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{92:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return u})),t.d(n,"default",(function(){return l}));var o=t(2),r=t(6),c=(t(0),t(99)),a={id:"observe",title:"observe",sidebar_label:"observe"},s={unversionedId:"guides/observe",id:"guides/observe",isDocsHomePage:!1,title:"observe",description:"The observe function allows us to watch observables and run effects when their values change or when any of their dependencies' values change.",source:"@site/docs/guides/observe.md",slug:"/guides/observe",permalink:"/elementos-docs/docs/guides/observe",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/guides/observe.md",version:"current",sidebar_label:"observe",sidebar:"main",previous:{title:"derived",permalink:"/elementos-docs/docs/guides/derived"},next:{title:"batched",permalink:"/elementos-docs/docs/guides/batched"}},u=[{value:"Basic",id:"basic",children:[]},{value:"Synchronous Effects",id:"synchronous-effects",children:[]},{value:"Effect Cleanup",id:"effect-cleanup",children:[]},{value:"Disposal",id:"disposal",children:[]}],i={rightToc:u};function l(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(o.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"observe")," function allows us to watch observables and run effects when their values change or when any of their dependencies' values change."),Object(c.b)("h3",{id:"basic"},"Basic"),Object(c.b)("p",null,"Observers watch a single observable and run effects upon changes. Note that observer effects also run once immediately when they're initialized."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { atom, observe } from 'elementos'\n\nconst count$ = atom(10)\n\nobserve(count$, (count) => {\n  console.log(count)\n})\n\ncount$.actions.set(11)\n// Output:\n// 10\n// 11\n")),Object(c.b)("h3",{id:"synchronous-effects"},"Synchronous Effects"),Object(c.b)("p",null,"It's important to understand that state is updated synchronously and observer effects are run synchronously after state changes."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { atom, observe } from 'elementos'\n\nconst count$ = atom(10)\n\nobserve(count$, (count) => {\n  console.log(count)\n})\n\ncount$.actions.set(11)\nconsole.log('hello')\ncount$.actions.set(12)\n\n// Output:\n// 10\n// 11\n// hello\n// 12\n")),Object(c.b)("h3",{id:"effect-cleanup"},"Effect Cleanup"),Object(c.b)("p",null,"Observer effects support the return of a cleanup function which will always run immediately before the next effect is executed."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { atom, observe } from 'elementos'\n\nconst count$ = atom(10)\n\nobserve(count$, (count) => {\n  console.log(count)\n  return () => {\n    console.log('cleanup')\n  }\n})\n\ncount$.actions.set(11)\n\n// Output:\n// 10\n// cleanup\n// 11\n")),Object(c.b)("h3",{id:"disposal"},"Disposal"),Object(c.b)("p",null,"If we need to stop observing an observable, for example when a component unmounts, we can use the ",Object(c.b)("inlineCode",{parentName:"p"},"dispose")," method returned by ",Object(c.b)("inlineCode",{parentName:"p"},"observe"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { atom, observe } from 'elementos'\n\nconst count$ = atom(10)\n\nconst dispose = observe(count$, (count) => {\n  console.log(count)\n  return () => {\n    console.log('cleanup')\n  }\n})\n\ncount$.actions.set(11)\ndispose()\ncount$.actions.set(12) // This will no longer be picked up by the observer\n\n// Output:\n// 10\n// cleanup\n// 11\n// cleanup\n")))}l.isMDXComponent=!0},99:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return f}));var o=t(0),r=t.n(o);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=r.a.createContext({}),l=function(e){var n=r.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},b=function(e){var n=l(e.components);return r.a.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),b=l(t),d=o,f=b["".concat(a,".").concat(d)]||b[d]||p[d]||c;return t?r.a.createElement(f,s(s({ref:n},i),{},{components:t})):r.a.createElement(f,s({ref:n},i))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,a=new Array(c);a[0]=d;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var i=2;i<c;i++)a[i]=t[i];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);